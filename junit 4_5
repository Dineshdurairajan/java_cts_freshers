JUNIT 4 / 5

	Debugging

	unit Testing - junit 4 & 5,NgTesting....

	unit Testing - module testing of a project created by the programmer
	
	junit 4 - single jar file
	
	Annotations - @Test,@After,@Before,@BeforeClass,@AfterClass,@Ignore,@Category...

	junit4.jar to be added to build path

	pkg to be imported - 
		import static org.junit.Assert.*;
		import org.junit.Test;
	
	Methods:
		assertEquals	
		assertNull
		assertNotNull
		assertThat
		etc...

	Junit 5 - has 3 jars - core, jupiter engine ,vintage engine

	junit 5 has major changes
	jupiter engine 	vintage engine)

	platform launcher and runner helps in running the tests in the given environment
	hamcrest api supports junit testing - internally referred

	pkg to be imported - 
		import static org.junit.jupiter.api.Assertions.*;
		import org.junit.jupiter.api.Test;

	2 new methods has been introduced in junit 5

	assertAll
	assertMatches
	assertThrows

	Assumptions



example:

package com.test;

import static org.junit.Assert.assertEquals;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;



public class TestMyLogic {
	
	@BeforeClass//@BeforeAll
	public static void init(){
		System.out.println("initialized");
	}
	/*
	@Before //@BeforeEach
	public void init(){
		System.out.println("initialized");
	}*/
	
	@Test
	//@Ignore	//@Disabled
	public void testCode1(){
		System.out.println("in test1");
		assertEquals(3, new TestSample().add(1, 2));
		
	}
	@Test
	//@Ignore
	public void testCode2(){
		System.out.println("in test2");
		assertEquals(1, new TestSample().add(-1, 2));
	}
	@Test
	public void testCode3(){
		System.out.println("in test3");
		assertEquals(-1, new TestSample().add(1, -2));
	}
	
	/*@After // @AfterEach
	public void delete(){
		System.out.println("destroyed");
	}*/
	@AfterClass //@AfterAll
	public static void delete(){
		System.out.println("destroyed");
	}
}


Application which we are testing :
====================================

package com.test;


public class TestSample {
//1,2 = 3
//-1,2	=1
//1,-2  = -1
//1,2  = -3
	//3 - expected //actual - ?
	public int add(int a,int b)
	{
		return a+b;
	}
}
